"""Initial migration for models

Revision ID: 2e5b7a940b81
Revises: 74f30cd84aff
Create Date: 2024-12-31 03:41:10.996763

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2e5b7a940b81'
down_revision: Union[str, None] = '74f30cd84aff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('car',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('make', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('productionYear', sa.Integer(), nullable=True),
    sa.Column('licensePlate', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('licensePlate')
    )
    op.create_index(op.f('ix_car_id'), 'car', ['id'], unique=False)
    op.create_index(op.f('ix_car_make'), 'car', ['make'], unique=False)
    op.create_index(op.f('ix_car_productionYear'), 'car', ['productionYear'], unique=False)
    op.create_table('garage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_garage_city'), 'garage', ['city'], unique=False)
    op.create_index(op.f('ix_garage_id'), 'garage', ['id'], unique=False)
    op.create_table('car_and_garages',
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.Column('garage_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['car.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['garage_id'], ['garage.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('car_id', 'garage_id')
    )
    op.create_table('maintenance',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('serviceType', sa.String(), nullable=True),
    sa.Column('scheduledDate', sa.DateTime(), nullable=True),
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.Column('garage_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['car.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['garage_id'], ['garage.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_maintenance_car_id'), 'maintenance', ['car_id'], unique=False)
    op.create_index(op.f('ix_maintenance_garage_id'), 'maintenance', ['garage_id'], unique=False)
    op.create_index(op.f('ix_maintenance_id'), 'maintenance', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_maintenance_id'), table_name='maintenance')
    op.drop_index(op.f('ix_maintenance_garage_id'), table_name='maintenance')
    op.drop_index(op.f('ix_maintenance_car_id'), table_name='maintenance')
    op.drop_table('maintenance')
    op.drop_table('car_and_garages')
    op.drop_index(op.f('ix_garage_id'), table_name='garage')
    op.drop_index(op.f('ix_garage_city'), table_name='garage')
    op.drop_table('garage')
    op.drop_index(op.f('ix_car_productionYear'), table_name='car')
    op.drop_index(op.f('ix_car_make'), table_name='car')
    op.drop_index(op.f('ix_car_id'), table_name='car')
    op.drop_table('car')
    # ### end Alembic commands ###
